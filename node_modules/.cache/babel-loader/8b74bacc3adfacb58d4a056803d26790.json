{"ast":null,"code":"var _jsxFileName = \"G:\\\\FRONT-END\\\\2nd YEAR\\\\Semester2\\\\4 Project Exam2\\\\project-exam-2-daliasir\\\\src\\\\components\\\\admin\\\\AdminMessagesPage.js\",\n    _s = $RefreshSig$();\n\nimport Heading from \"../layout/Heading\";\nimport { useState, useEffect } from \"react\";\nimport { BASE_URL, MESSAGE_PATH } from \"../../constants/api\";\nimport useAxios from \"../../hooks/useAxios\";\nimport Container from \"react-bootstrap/Container\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Table from \"react-bootstrap/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminMessagesPage() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const url = BASE_URL + MESSAGE_PATH;\n  document.title = `Holidaze | Admin`;\n  const http = useAxios();\n  useEffect(() => {\n    async function fetchMessages() {\n      try {\n        const response = await http.get(url);\n        console.log(\"response\", response);\n        setMessages(response.data);\n      } catch (error) {\n        console.log(error);\n        setError(\"An error occurred:\" + error.toString());\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchMessages(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [url]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center m-5\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: [\"An error occurred: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      content: \"Inbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Received\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: messages.map(messageItem => {\n          const {\n            id,\n            created_at,\n            name,\n            email,\n            message\n          } = messageItem;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              id: id,\n              children: new Intl.DateTimeFormat(\"en-GB\", {\n                year: \"numeric\",\n                month: \"2-digit\",\n                day: \"2-digit\"\n              }).format(created_at.firstSale)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: id,\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: id,\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              id: id,\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminMessagesPage, \"MDUxoAIHLFEOIYhuCjB3R5R3LGs=\", false, function () {\n  return [useAxios];\n});\n\n_c = AdminMessagesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminMessagesPage\");","map":{"version":3,"sources":["G:/FRONT-END/2nd YEAR/Semester2/4 Project Exam2/project-exam-2-daliasir/src/components/admin/AdminMessagesPage.js"],"names":["Heading","useState","useEffect","BASE_URL","MESSAGE_PATH","useAxios","Container","Spinner","Alert","Table","AdminMessagesPage","messages","setMessages","loading","setLoading","error","setError","url","document","title","http","fetchMessages","response","get","console","log","data","toString","map","messageItem","id","created_at","name","email","message","Intl","DateTimeFormat","year","month","day","format","firstSale"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,qBAAvC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMgB,GAAG,GAAGd,QAAQ,GAAGC,YAAvB;AACAc,EAAAA,QAAQ,CAACC,KAAT,GAAkB,kBAAlB;AACA,QAAMC,IAAI,GAAGf,QAAQ,EAArB;AAGAH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAemB,aAAf,GAA+B;AAC7B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASN,GAAT,CAAvB;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAV,QAAAA,WAAW,CAACU,QAAQ,CAACI,IAAV,CAAX;AACD,OAJD,CAIE,OAAOX,KAAP,EAAc;AACdS,QAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAC,QAAAA,QAAQ,CAAC,uBAAuBD,KAAK,CAACY,QAAN,EAAxB,CAAR;AACD,OAPD,SAOU;AACRb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AACDO,IAAAA,aAAa,GAbC,CAed;AACD,GAhBQ,EAgBN,CAACJ,GAAD,CAhBM,CAAT;;AAkBA,MAAIJ,OAAJ,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAIE,KAAJ,EAAW;AACT,wBAAO,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA,wCAA4CA,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAA,kBACGJ,QAAQ,CAACiB,GAAT,CAAcC,WAAD,IAAiB;AAC7B,gBAAM;AAAEC,YAAAA,EAAF;AAAMC,YAAAA,UAAN;AAAkBC,YAAAA,IAAlB;AAAwBC,YAAAA,KAAxB;AAA+BC,YAAAA;AAA/B,cAA2CL,WAAjD;AACA,8BACE;AAAA,oCACE;AAAI,cAAA,EAAE,EAAEC,EAAR;AAAA,wBAAa,IAAIK,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC5CC,gBAAAA,IAAI,EAAE,SADsC;AAE5CC,gBAAAA,KAAK,EAAE,SAFqC;AAG5CC,gBAAAA,GAAG,EAAE;AAHuC,eAAjC,EAIVC,MAJU,CAIHT,UAAU,CAACU,SAJR;AAAb;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAI,cAAA,EAAE,EAAEX,EAAR;AAAA,wBAAaE;AAAb;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAI,cAAA,EAAE,EAAEF,EAAR;AAAA,wBAAaG;AAAb;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAI,cAAA,EAAE,EAAEH,EAAR;AAAA,wBAAaI;AAAb;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA,aAASJ,EAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAYD,SAdA;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAzEuBpB,iB;UAOTL,Q;;;KAPSK,iB","sourcesContent":["import Heading from \"../layout/Heading\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { BASE_URL, MESSAGE_PATH } from \"../../constants/api\";\r\nimport useAxios from \"../../hooks/useAxios\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nexport default function AdminMessagesPage() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const url = BASE_URL + MESSAGE_PATH;\r\n  document.title = `Holidaze | Admin`;\r\n  const http = useAxios();\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchMessages() {\r\n      try {\r\n        const response = await http.get(url);\r\n        console.log(\"response\", response);\r\n        setMessages(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(\"An error occurred:\" + error.toString());\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchMessages();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [url]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center m-5\">\r\n        <Spinner animation=\"border\" />\r\n      </div >\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <Alert variant=\"danger\">An error occurred: {error}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Heading content=\"Inbox\" />\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Received</th>\r\n            <th>Sender</th>\r\n            <th>Email</th>\r\n            <th>Message</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {messages.map((messageItem) => {\r\n            const { id, created_at, name, email, message } = messageItem;\r\n            return (\r\n              <tr key={id}>\r\n                <td id={id}>{new Intl.DateTimeFormat(\"en-GB\", {\r\n                  year: \"numeric\",\r\n                  month: \"2-digit\",\r\n                  day: \"2-digit\"\r\n                }).format(created_at.firstSale)}</td>\r\n                <td id={id}>{name}</td>\r\n                <td id={id}>{email}</td>\r\n                <td id={id}>{message}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}