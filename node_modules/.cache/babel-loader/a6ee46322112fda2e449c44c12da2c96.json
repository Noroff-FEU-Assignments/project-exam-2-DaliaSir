{"ast":null,"code":"var _jsxFileName = \"G:\\\\FRONT-END\\\\2nd YEAR\\\\Semester2\\\\4 Project Exam2\\\\project-exam-2-daliasir\\\\src\\\\components\\\\contact\\\\ContactForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport FormError from \"../common/FormError\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object().shape({\n  fullName: yup.string().required(\"Please enter your full name\").min(3, \"Full name must be at least 3 characters\"),\n  email: yup.string().required(\"Please enter an email address\").email(\"Please enter a valid email address\"),\n  message: yup.string().required(\"Please enter your message\").min(10, \"The message must be at least 10 characters\")\n});\nexport default function ContactForm() {\n  _s();\n\n  const [submitting, setSubmitting] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors,\n      isSubmitSuccessful\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-container__form\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"contact-container__form--success-message\",\n      children: isSubmitSuccessful ? \"You have successfully sent your message!\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 contact-container__form--form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"fullName\"),\n          className: \"form-control\",\n          placeholder: \"Your full name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), errors.fullName && /*#__PURE__*/_jsxDEV(FormError, {\n          children: errors.fullName.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 contact-container__form--form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"email\"),\n          className: \"form-control\",\n          placeholder: \"Your email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(FormError, {\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 contact-container__form--form-group\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 6,\n          ...register(\"message\"),\n          className: \"form-control\",\n          placeholder: \"Your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), errors.message && /*#__PURE__*/_jsxDEV(FormError, {\n          children: errors.message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: submitting ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ContactForm, \"OZ7DrjA+Wvg/Rwxspv7eFL6GrqY=\", false, function () {\n  return [useForm];\n});\n\n_c = ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["G:/FRONT-END/2nd YEAR/Semester2/4 Project Exam2/project-exam-2-daliasir/src/components/contact/ContactForm.js"],"names":["useState","useForm","yup","yupResolver","FormError","Form","validationSchema","object","shape","fullName","string","required","min","email","message","ContactForm","submitting","setSubmitting","register","handleSubmit","reset","formState","errors","isSubmitSuccessful","resolver","onSubmit","data","console","log"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport FormError from \"../common/FormError\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst validationSchema = yup.object().shape({\r\n  fullName: yup.string().required(\"Please enter your full name\").min(3, \"Full name must be at least 3 characters\"),\r\n  email: yup.string().required(\"Please enter an email address\").email(\"Please enter a valid email address\"),\r\n  message: yup.string().required(\"Please enter your message\").min(10, \"The message must be at least 10 characters\"),\r\n});\r\n\r\nexport default function ContactForm() {\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const { register, handleSubmit, reset, formState: { errors, isSubmitSuccessful } } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const onSubmit = data => {\r\n    console.log(data);\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <div className=\"contact-container__form\">\r\n      <p className=\"contact-container__form--success-message\">\r\n        {isSubmitSuccessful ? \"You have successfully sent your message!\" : \"\"}\r\n      </p>\r\n      <Form onSubmit={handleSubmit(onSubmit)} >\r\n        <Form.Group className=\"mb-3 contact-container__form--form-group\" >\r\n          <Form.Label>Full Name</Form.Label>\r\n          <input {...register(\"fullName\")} className=\"form-control\" placeholder=\"Your full name\" />\r\n          {errors.fullName && <FormError>{errors.fullName.message}</FormError>}\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3 contact-container__form--form-group\" >\r\n          <Form.Label>Email</Form.Label>\r\n          <input {...register(\"email\")} className=\"form-control\" placeholder=\"Your email address\" />\r\n          {errors.email && <FormError>{errors.email.message}</FormError>}\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3 contact-container__form--form-group\" >\r\n          <Form.Label>Message</Form.Label>\r\n          <textarea rows={6} {...register(\"message\")} className=\"form-control\" placeholder=\"Your message\" />\r\n          {errors.message && <FormError>{errors.message.message}</FormError>}\r\n        </Form.Group>\r\n        <button type=\"submit\" className=\"btn btn-primary\">{submitting ? 'Sending...' : 'Send'}</button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}