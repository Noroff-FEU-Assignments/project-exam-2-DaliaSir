{"ast":null,"code":"var _jsxFileName = \"G:\\\\FRONT-END\\\\2nd YEAR\\\\Semester2\\\\4 Project Exam2\\\\project-exam-2-daliasir\\\\src\\\\components\\\\admin\\\\AdminMessagesPage.js\",\n    _s = $RefreshSig$();\n\nimport Heading from \"../layout/Heading\";\nimport { useState, useEffect } from \"react\";\nimport { BASE_URL, MESSAGE_PATH } from \"../../constants/api\";\nimport useAxios from \"../../hooks/useAxios\";\nimport PropTypes from \"prop-types\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Alert from \"react-bootstrap/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AdminMessagesPage() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const url = BASE_URL + MESSAGE_PATH;\n  const http = useAxios();\n  useEffect(() => {\n    async function fetchMessages() {\n      try {\n        const response = await http.get(url);\n        console.log(\"response\", response);\n        setMessages(response.data);\n      } catch (error) {\n        console.log(error);\n        setError(\"An error occurred:\" + error.toString());\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchMessages();\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center m-5\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: [\"An error occurred: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      content: \"Admin Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"messages-container\",\n      children: messages.map(function Message(_ref) {\n        let {\n          id,\n          name,\n          email,\n          message\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          md: 4,\n          className: \"g-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Sender: \", name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: [\"Email: \", email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"Message: \", message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AdminMessagesPage, \"MDUxoAIHLFEOIYhuCjB3R5R3LGs=\", false, function () {\n  return [useAxios];\n});\n\n_c = AdminMessagesPage;\nMessage.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n};\nMessage.defaultProps = {\n  name: \"Accommodation\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminMessagesPage\");","map":{"version":3,"sources":["G:/FRONT-END/2nd YEAR/Semester2/4 Project Exam2/project-exam-2-daliasir/src/components/admin/AdminMessagesPage.js"],"names":["Heading","useState","useEffect","BASE_URL","MESSAGE_PATH","useAxios","PropTypes","Row","Col","Card","Spinner","Alert","AdminMessagesPage","messages","setMessages","loading","setLoading","error","setError","url","http","fetchMessages","response","get","console","log","data","toString","map","Message","id","name","email","message","propTypes","number","isRequired","string","image","price","oneOfType","defaultProps"],"mappings":"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","sourcesContent":["import Heading from \"../layout/Heading\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { BASE_URL, MESSAGE_PATH } from \"../../constants/api\";\r\nimport useAxios from \"../../hooks/useAxios\";\r\nimport PropTypes from \"prop-types\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nexport default function AdminMessagesPage() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const url = BASE_URL + MESSAGE_PATH;\r\n  const http = useAxios();\r\n\r\n  useEffect(() => {\r\n    async function fetchMessages() {\r\n      try {\r\n        const response = await http.get(url);\r\n        console.log(\"response\", response);\r\n        setMessages(response.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setError(\"An error occurred:\" + error.toString());\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchMessages();\r\n\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"d-flex justify-content-center m-5\">\r\n        <Spinner animation=\"border\" />\r\n      </div >\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <Alert variant=\"danger\">An error occurred: {error}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Heading content=\"Admin Messages\" />\r\n      <Row className=\"messages-container\">\r\n        {messages.map(function Message({ id, name, email, message }) {\r\n          return (\r\n            <Col sm={6} md={4} className=\"g-4\" key={id}>\r\n              <Card >\r\n                <Card.Body>\r\n                  <Card.Title>Sender: {name}</Card.Title>\r\n                  <Card.Title>Email: {email}</Card.Title>\r\n                  <Card.Text>Message: {message}</Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </>\r\n  );\r\n\r\n\r\n}\r\n\r\nMessage.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  price: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\r\n};\r\n\r\nMessage.defaultProps = {\r\n  name: \"Accommodation\"\r\n}"]},"metadata":{},"sourceType":"module"}