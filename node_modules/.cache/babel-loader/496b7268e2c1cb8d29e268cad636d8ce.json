{"ast":null,"code":"var _jsxFileName = \"G:\\\\FRONT-END\\\\2nd YEAR\\\\Semester2\\\\4 Project Exam2\\\\project-exam-2-daliasir\\\\src\\\\components\\\\home\\\\SearchAccommodations.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { BASE_URL, ACCOMMODATION_PATH } from \"../../constants/api\";\nimport Form from \"react-bootstrap/Form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SearchAccommodations() {\n  _s();\n\n  const [accommodations, setAccommodations] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const url = BASE_URL + ACCOMMODATION_PATH;\n  document.title = `Holidaze | Accommodations`;\n  useEffect(() => {\n    async function fetchAccommodations() {\n      try {\n        const response = await fetch(url);\n        console.log(response);\n\n        if (response.ok) {\n          const json = await response.json();\n          console.log(json);\n          setAccommodations(json);\n        } else {\n          setError(\"An error occurred\");\n        }\n      } catch (error) {\n        setError(error.toString());\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchAccommodations(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return console.log(error);\n  }\n\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const results = !searchTerm ? accommodations : accommodations.filter(accommodation => accommodation.toLowerCase().includes(searchTerm.toLocaleLowerCase())); // useEffect(() => {\n  //   const results = accommodations.filter(accommodation =>\n  //     accommodation.toLowerCase().includes(searchTerm.toLowerCase())\n  //   );\n  //   setSearchResults(results);\n  // }, [searchTerm]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          type: \"text\",\n          placeholder: \"Search for a place to stay...\",\n          value: searchTerm,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SearchAccommodations, \"nSzLNVyyjnQl9GcybsxB6TNOSek=\");\n\n_c = SearchAccommodations;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAccommodations\");","map":{"version":3,"sources":["G:/FRONT-END/2nd YEAR/Semester2/4 Project Exam2/project-exam-2-daliasir/src/components/home/SearchAccommodations.js"],"names":["useState","useEffect","BASE_URL","ACCOMMODATION_PATH","Form","SearchAccommodations","accommodations","setAccommodations","searchTerm","setSearchTerm","loading","setLoading","error","setError","url","document","title","fetchAccommodations","response","fetch","console","log","ok","json","toString","handleSearch","event","target","value","results","filter","accommodation","toLowerCase","includes","toLocaleLowerCase","map","item"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,kBAAnB,QAA6C,qBAA7C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC7C,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMc,GAAG,GAAGZ,QAAQ,GAAGC,kBAAvB;AACAY,EAAAA,QAAQ,CAACC,KAAT,GAAkB,2BAAlB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegB,mBAAf,GAAqC;AACnC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,YAAIA,QAAQ,CAACI,EAAb,EAAiB;AACf,gBAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAT,EAAnB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAhB,UAAAA,iBAAiB,CAACgB,IAAD,CAAjB;AACD,SAJD,MAIO;AACLV,UAAAA,QAAQ,CAAC,mBAAD,CAAR;AACD;AAEF,OAXD,CAWE,OAAOD,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAK,CAACY,QAAN,EAAD,CAAR;AACD,OAbD,SAaU;AACRb,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AACDM,IAAAA,mBAAmB,GAnBL,CAqBd;AACD,GAtBQ,EAsBN,EAtBM,CAAT;;AAwBA,MAAIP,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIE,KAAJ,EAAW;AACT,WAAOQ,OAAO,CAACC,GAAR,CAAYT,KAAZ,CAAP;AACD;;AAED,QAAMa,YAAY,GAAGC,KAAK,IAAI;AAC5BjB,IAAAA,aAAa,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,CAACrB,UAAD,GACZF,cADY,GAEZA,cAAc,CAACwB,MAAf,CAAsBC,aAAa,IACnCA,aAAa,CAACC,WAAd,GAA4BC,QAA5B,CAAqCzB,UAAU,CAAC0B,iBAAX,EAArC,CADA,CAFJ,CA5C6C,CAoD7C;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA,+BACE;AAAO,UAAA,SAAS,EAAC,cAAjB;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,WAAW,EAAC,+BAAxD;AAAwF,UAAA,KAAK,EAAE1B,UAA/F;AAA2G,UAAA,QAAQ,EAAEiB;AAArH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,gBACGI,OAAO,CAACM,GAAR,CAAYC,IAAI,iBACf;AAAA,kBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAcD;;GAzEuB/B,oB;;KAAAA,oB","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BASE_URL, ACCOMMODATION_PATH } from \"../../constants/api\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport default function SearchAccommodations() {\r\n  const [accommodations, setAccommodations] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const url = BASE_URL + ACCOMMODATION_PATH;\r\n  document.title = `Holidaze | Accommodations`;\r\n\r\n  useEffect(() => {\r\n    async function fetchAccommodations() {\r\n      try {\r\n        const response = await fetch(url);\r\n        console.log(response);\r\n        if (response.ok) {\r\n          const json = await response.json();\r\n          console.log(json);\r\n          setAccommodations(json);\r\n        } else {\r\n          setError(\"An error occurred\");\r\n        }\r\n\r\n      } catch (error) {\r\n        setError(error.toString());\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchAccommodations();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div >\r\n  }\r\n  if (error) {\r\n    return console.log(error);\r\n  }\r\n\r\n  const handleSearch = event => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const results = !searchTerm\r\n    ? accommodations\r\n    : accommodations.filter(accommodation =>\r\n      accommodation.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n    );\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   const results = accommodations.filter(accommodation =>\r\n  //     accommodation.toLowerCase().includes(searchTerm.toLowerCase())\r\n  //   );\r\n  //   setSearchResults(results);\r\n  // }, [searchTerm]);\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" >\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"Search for a place to stay...\" value={searchTerm} onChange={handleSearch} />\r\n        </Form.Group>\r\n      </Form>\r\n      <ul>\r\n        {results.map(item => (\r\n          <li>{item}</li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}